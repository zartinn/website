---
import { H3, P } from '..';
interface Props {
    slides: Array<{ TITLE: string, DESCRIPTION: string, LINKEDIN_PROFILE?: string, ROLE?: string }>
}

const { slides } = Astro.props;

const containerClasses = 'relative w-full rounded-xl flex flex-col gap-8 items-center border-clr-primary shadow-contrast shadow-sm border-2 overflow-hidden';
const getInitialPositionalClass = (idx: number) => {
    return idx !== 0 ? 'right' : '' 
}
const getInitialActiveClass = (idx: number) => {
    return idx === 0 ? 'active' : '' 
}
const getPosition = (idx: number) => {
    return idx === 0 ? 'relative' : 'absolute' 
}
---

<div class={`slide-container ${containerClasses} h-fit`}>
    { slides.map((slide, idx) => (
        <div class={`slide ${getPosition(idx)} inset-0 w-full px-16 pb-20 pt-12 flex flex-col items-center justify-center gap-8 ${getInitialPositionalClass(idx)}`}>
            { slide.LINKEDIN_PROFILE ?
                <a href={slide.LINKEDIN_PROFILE} target="_blank"><H3 className="underline text-center hover:text-clr-primary">{slide.TITLE}</H3></a> :
                <H3 className="text-center">{slide.TITLE}</H3>
            }
            { slide.ROLE && <P>{slide.ROLE}</P>}
            <div class="h-1 w-1/2 bg-gradient-to-r from-clr-primary to-clr-secondary rounded-3xl shrink-0"></div>
            <P className="italic">{slide.DESCRIPTION}</P>
        </div>
    ))}
    <div class="pagination absolute bottom-4 self-center flex gap-4">
        { slides.map((_, idx) => (
            <div class={`bubble h-4 w-4 border border-clr-primary rounded-full cursor-pointer ${getInitialActiveClass(idx)}`}></div>
        ))}
    </div>
</div>


<style>
    .slide {
        transition: 300ms transform;
    }
    .slide.left {
        transform: translateX(-100%);
    }
    .slide.right {
        transform: translateX(100%);
    }
    .pagination .active {
        background-color: var(--clr-primary);
    }
</style>

<script>
    import { setupCarouselListener } from './script';

    document.addEventListener('DOMContentLoaded', () => setupCarouselListener());
    document.addEventListener('astro:after-swap', () => setupCarouselListener());
</script>