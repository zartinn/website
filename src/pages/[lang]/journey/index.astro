---
import Layout from '../../../layouts/Layout.astro';
import image from '../../../assets/images/cards/journey.png';
import type { Translations } from '../../../utils/typings';
import { IntroSection } from '../../../sections';
import JourneySection from '../../../sections/JourneySection/JourneySection.astro';
import { getStations } from '../../../utils/helper';

interface Props {}
export function getStaticPaths() {
  return [
    {params: {lang: 'de'}},
    {params: {lang: 'en'}}
  ];
}
const lang = Astro.params.lang || 'en';
const T: Translations = await import(`../../../assets/i18n/${lang}.json`);
const JOURNEY_T = T.JOURNEY;

const stations = getStations(JOURNEY_T.STATIONS);
const getPosition = (idx: number) => {
  if (idx === 0) return 'top';
  if (idx === stations.length - 1) return 'bottom';
  return 'default';
}

---

<Layout title={T.HOME.SEO_TITLE} description={T.HOME.SEO_DESCRIPTION} T={T}>
  <main transition:name="journey" class="flex-grow mt-header" transition:persist="journey-page">
    <IntroSection
      id="journey",
      image={image}
      title={JOURNEY_T.TITLE}
      description={JOURNEY_T.DESCRIPTION_LONG}
    />

    <div class="relative flex flex-col">
      {stations.map((station, idx) => (
        <JourneySection
          className={idx % 2 === 0 ? 'bg-bg-secondary' : 'bg-bg-primary'}
          station={station}
          position={getPosition(idx)}
          idx={idx}
        />
      ))}
    </div>
  </main>
</Layout>

<script>
  import { setupIntersectionObserver } from '../../../utils/setup-intersection-observer';

  document.addEventListener('DOMContentLoaded', () => setupIntersectionObserver());
  document.addEventListener('astro:page-load', () => setupIntersectionObserver());
</script>