---
import { ViewTransitions } from 'astro:transitions';
import { Header, Footer } from '../components';
import '../styles/view-transitions.css';
interface Props {
	title: string;
}

const { title } = Astro.props;
const url = Astro.url
const removedLangPathName = url.pathname.replace('/de', '');
const pathname = removedLangPathName === '' ? '/' : removedLangPathName;
const isHome = pathname === '/';

---

<!doctype html>
<html
	lang="en"
	class="desktop:text-html-xs desktop-s:text-html-s desktop-m:text-html-m desktop-l:text-html-l desktop-xl:text-html-default text-html-default"
>
	<head>
		<script data-astro="raw">
			const getTheme = () => localStorage.getItem("theme") || "light";
			const setTheme = (theme) => {
				document.documentElement.setAttribute("theme", theme);

				const downloadCVLink = document.getElementById('download-cv');
				const cvFileName = theme === 'dark' ? 'Zachoszcz-CV-dark.pdf' : 'Zachoszcz-CV.pdf'
				downloadCVLink?.setAttribute('href', `/assets/${cvFileName}`);
			}
			setTheme(getTheme());


			window.addEventListener("DOMContentLoaded", () => setTheme(getTheme()));
			document.addEventListener("astro:after-swap", () => setTheme(getTheme()));
		</script>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preload" href="/assets/fonts/GT-America-Standard-Regular.woff2" as="font" type="font/woff2" crossorigin="anonymous">
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body class="bg-bg-primary overflow-x-hidden flex flex-col min-h-screen">
		<Header isHome={isHome}/>
		<slot />
		<Footer/>
	</body>
</html>

<style is:global>
    @font-face {
        font-family: 'GT Americano';
        src: url('/assets/fonts/GT-America-Standard-Regular.woff2') format('woff2'),
            url('/assets/fonts/GT-America-Standard-Regular.woff') format('woff');
  		font-display: swap;
    }
    @font-face {
        font-family: 'GT Americano';
        src: url('/assets/fonts/GT-America-Standard-Bold.woff2') format('woff2'),
            url('/assets/fonts/GT-America-Standard-Bold.woff') format('woff');
		font-weight: bold;
  		font-display: swap;
    }
</style>

<style is:global>
	:root {
		--light-primary: 255, 253, 249;
		--light-secondary: 245, 245, 240;
		--light-border: 180, 180, 180;
		--light-shadow: rgb(255 253 249 / 0.4);
		--dark-primary: 30, 30, 30;
		--dark-secondary: 40, 40, 40;
		--dark-border: 85, 85, 85;
		--dark-shadow: rgb(30 30 30 / 0.4);
		--primary-clr-light: 25, 144, 255;
		--secondary-clr-light: 111, 183, 250;
		/* --secondary-clr-light: rgb(111, 183, 250); */
		--primary-clr-dark: 138, 199, 255;
		--secondary-clr-dark: 40, 149, 251;
		/* --secondary-clr-dark: rgb(40, 149, 251); */
		--fg-primary: rgb(var(--light-primary));
		--fg-shadow: var(--light-shadow);
		--contrast-border: rgb(var(--dark-border));
		--bg-primary: rgb(var(--dark-primary));
		--bg-primary-70: rgba(var(--dark-primary), 0.85);
		--clr-primary: rgb(var(--primary-clr-dark));
		--clr-secondary: rgb(var(--secondary-clr-dark));

		--bg-image-opacity: 0.3;
	}

	@media (prefers-color-scheme: dark) {
		:root {
			--fg-primary: rgb(var(--light-primary));
			--fg-shadow: var(--light-shadow);
			--contrast-border: rgb(var(--dark-border));
			--bg-primary: rgb(var(--dark-primary));
			--bg-primary-70: rgba(var(--dark-primary), 0.85);
			--bg-secondary: rgb(var(--dark-secondary));
			--clr-primary: rgb(var(--primary-clr-dark));
			--clr-secondary: rgb(var(--secondary-clr-dark));

			--bg-image-opacity: 0.3;
			color-scheme: dark;
		}
	}

	:root[theme="dark"] {
		--fg-primary: rgb(var(--light-primary));
		--fg-shadow: var(--light-shadow);
		--contrast-border: rgb(var(--dark-border));
		--bg-primary: rgb(var(--dark-primary));
		--bg-primary-70: rgba(var(--dark-primary), 0.85);
		--bg-secondary: rgb(var(--dark-secondary));
		--clr-primary: rgb(var(--primary-clr-dark));
		--clr-secondary: rgb(var(--secondary-clr-dark));

		--bg-image-opacity: 0.3;
		color-scheme: dark;
	}
	:root[theme="light"] {
		--fg-primary: rgb(var(--dark-primary));
		--fg-shadow: var(--dark-shadow);
		--contrast-border: rgb(var(--light-border));
		--bg-primary: rgb(var(--light-primary));
		--bg-primary-70: rgba(var(--light-primary), 0.85);
		--bg-secondary: rgb(var(--light-secondary));
		--clr-primary: rgb(var(--primary-clr-light));
		--clr-secondary: rgb(var(--secondary-clr-light));

		--bg-image-opacity: 0.25;
		color-scheme: light;
	}
	* {
		transition: background-color 180ms, color 180ms, opacity 180ms;
	}
	* {
		user-select: none;
	}

	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}

	.card.active {
		filter: grayscale(0);
	}
	.card.active img {
		transform: scale(1.05)
	}
</style>

<script>
	const setCardListeners = () => {
		const cardElements = Array.from(document.getElementsByClassName('card'));
	
		cardElements.forEach((cardEl, idx) => {
			cardEl.addEventListener('touchstart', () => {
				cardEl.classList.add('active');
				cardElements.forEach((card, i) => {
					if (idx !== i) {
						card.classList.remove('active');
					}
				})
			});
		});
	}

	window.addEventListener("DOMContentLoaded", () => setCardListeners());
	document.addEventListener("astro:after-swap", () => setCardListeners());
</script>
