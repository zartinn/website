---
import { ViewTransitions } from 'astro:transitions';
import Header from '../components/Header/Header.astro';
import Footer from '../components/Footer/Footer.astro';
import type { Translations } from '../utils/typings';
import '../styles/view-transitions.css';
interface Props {
	title: string;
	description?: string;
	T: Translations;
	is404?: boolean;
}

const { title, description, T, is404 } = Astro.props;
const url = Astro.url
const removedLangPathName = url.pathname.replace('/de', '');
const pathname = removedLangPathName === '' ? '/' : removedLangPathName;
const isHome = pathname === '/';
const rootFontSizeClasses = 'desktop:text-html-xs desktop-s:text-html-s desktop-m:text-html-m desktop-l:text-html-l desktop-xl:text-html-default text-html-default';

---

<!doctype html>
<html
	lang="en"
	class={`${rootFontSizeClasses}`}
>
	<head>
		<script data-astro="raw">
			const getTheme = () => {
				let theme = localStorage.getItem('theme');
				if (!theme) {
					theme = 'dark';
					localStorage.setItem('theme', theme);
				}
				return theme;
			}

			const setTheme = (theme) => {
				document.documentElement.setAttribute('theme', theme);

				const downloadCVLink = document.getElementById('download-cv');
				const cvFileName = theme === 'dark' ? 'Zachoszcz-CV-dark.pdf' : 'Zachoszcz-CV.pdf'
				downloadCVLink?.setAttribute('href', `/assets/${cvFileName}`);
			}
			setTheme(getTheme());

			document.addEventListener('astro:after-swap', () => setTheme(getTheme()));
		</script>
		<meta charset="UTF-8" />
		<title>{title}</title>
		{ description && <meta name="description" content={description} />}
		<meta property="og:image" content="https://zartin.dev/zartin.jpg">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preload" href="/assets/fonts/GT-America-Standard-Regular.woff2" as="font" type="font/woff2" crossorigin="anonymous">
		<meta name="generator" content={Astro.generator} />
		<ViewTransitions fallback="swap"/>
	</head>
	<body class="bg-bg-primary overflow-x-hidden flex flex-col min-h-screen">
		<Header showLogo={isHome || is404}/>
		<slot />
		<Footer T={T.FOOTER}/>
	</body>
</html>

<style is:global>
    @font-face {
        font-family: 'GT Americano';
        src: url('/assets/fonts/GT-America-Standard-Regular.woff2') format('woff2'),
            url('/assets/fonts/GT-America-Standard-Regular.woff') format('woff');
  		font-display: swap;
    }
    @font-face {
        font-family: 'GT Americano';
        src: url('/assets/fonts/GT-America-Standard-Bold.woff2') format('woff2'),
            url('/assets/fonts/GT-America-Standard-Bold.woff') format('woff');
		font-weight: bold;
  		font-display: swap;
    }

    @keyframes move {
        0% {
            opacity: 0.5;
        }
        50% {
            opacity: 1;
        }
        100% {
            opacity: 0.5;
        }
    }

</style>

<style is:global>
	:root {
		--light-primary: 255, 253, 249;
		--light-secondary: 245, 245, 240;
		--light-border: 180, 180, 180;
		--light-shadow: rgb(255 253 249 / 0.4);
		--dark-primary: 30, 30, 30;
		--dark-secondary: 40, 40, 40;
		--dark-border: 85, 85, 85;
		--dark-shadow: rgb(30 30 30 / 0.4);
		--primary-clr-light: 25, 144, 255;
		--secondary-clr-light: 111, 183, 250;
		--primary-clr-dark: 138, 199, 255;
		--secondary-clr-dark: 40, 149, 251;

		--bg-image-opacity: 0.3;
	}

	:root[theme="dark"] {
		--fg-primary: rgb(var(--light-primary));
		--fg-shadow: var(--light-shadow);
		--contrast-border: rgb(var(--dark-border));
		--bg-primary: rgb(var(--dark-primary));
		--bg-primary-70: rgba(var(--dark-primary), 0.85);
		--bg-secondary: rgb(var(--dark-secondary));
		--clr-primary: rgb(var(--primary-clr-dark));
		--clr-secondary: rgb(var(--secondary-clr-dark));
		--clr-error: darkred;

		--bg-image-opacity: 0.3;
		color-scheme: dark;
	}
	:root[theme="light"] {
		--fg-primary: rgb(var(--dark-primary));
		--fg-shadow: var(--dark-shadow);
		--contrast-border: rgb(var(--light-border));
		--bg-primary: rgb(var(--light-primary));
		--bg-primary-70: rgba(var(--light-primary), 0.85);
		--bg-secondary: rgb(var(--light-secondary));
		--clr-primary: rgb(var(--primary-clr-light));
		--clr-secondary: rgb(var(--secondary-clr-light));
		--clr-error: red;

		--bg-image-opacity: 0.25;
		color-scheme: light;
	}
	* {
		transition: background-color 150ms, color 150ms, opacity 150ms;
	}

	img {
		/* Hide alt text in mozilla browser while image is loading: */
		color: transparent;
	}

	.card.active {
		filter: grayscale(0);
	}
	.card.active img {
		transform: scale(1.05)
	}
</style>

<script>
	const setCardListeners = () => {
		const cardElements = Array.from(document.getElementsByClassName('card'));
	
		cardElements.forEach((cardEl, idx) => {
			cardEl.addEventListener('touchstart', () => {
				cardEl.classList.add('active');
				cardElements.forEach((card, i) => {
					if (idx !== i) {
						card.classList.remove('active');
					}
				})
			}, { passive: true });
		});
	}

	let loaded = false;
	document.addEventListener("DOMContentLoaded", () => { loaded = true; setCardListeners()});
	document.addEventListener("astro:page-load", () => { if (!loaded) setCardListeners()});
	document.addEventListener("astro:before-swap", () => { loaded = false });

</script>
